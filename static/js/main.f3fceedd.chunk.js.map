{"version":3,"sources":["reportWebVitals.js","CommonUtilities.js","MainSection.js","Navbar.js","MobileNavbar.js","Website.js","SkillsChart.js","GoogleChart.js","MobileSkillsMenu.js","ChartComponent.js","SagaComponent.js","SecondPage.js","ThirdPage.js","Database Icon.png","New Dino Sprite.png","FourthPage.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","InlineTag","props","link","href","target","className","class_name","text","TextSection","paragraph_classname","text_lines","map","line","index","Fragment","length","links","last","H4Tag","IconTag","undefined","id","rel","children","SectionHeader","IconProps","italic_tag","link_tag","classname_inner","Icon","useState","tooltipOpen","setTooltipOpen","data-icon","data-inline","Tooltip","placement","isOpen","toggle","MainPage","name","icon_prop","key","require","ListItem","state","height","scroll","bind","current_ref","React","createRef","event","preventDefault","this","window","scrollTo","top","document","querySelector","offsetTop","current","parentNode","offsetHeight","behavior","err","console","log","class","ref","onClick","Boolean","documentMode","value","Component","Navbar","at_roof","pageYOffset","options","rootMargin","innerHeight","child_ref","scrollHandler","new_observer","IntersectionObserver","entries","entry","isIntersecting","setState","observe","body","role","values","Links","class_inner","NavItem","link_ref","click_handler","nav","previousSibling","NavButton","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","MobileNavbar","link_props","text_content","Website","componentRef","elementRef","toggleClass","disclaimer_text","ConfigurationOptions","data","labels","datasets","backgroundColor","responsive","aspectRatio","maintainAspectRatio","tooltips","position","displayColors","callbacks","label","tooltipItem","Instructions","SkillsChart","chart_width_and_height","PieChart","SkillsPieChart","Chart","getContext","ref_prop","width","GoogleChart","load_google_charts_api","script_tag","createElement","src","appendChild","MobileSkillsProps","header","stars","Heading","Stars","val","difference","MobileSkillsMenu","prop","ChartComponent","internet_explorer","chart_ref","SectionProps","month","MonthHeader","Section","left_side","odd","left","Row","Saga","section","SagaComponent","inside_intersection","saga_observer_callback","div_ref","saga_observer_options","attributes","attributeFilter","attributeOldValue","intersection_observer_options","threshold","timeline_observer","saga_observer","MutationObserver","observer","forEach","target_class","header_class","intersectionRatio","right_side","includes","unobserve","animate_divs","querySelectorAll","oldValue","element","setAttribute","button","previousElementSibling","expanded","saga","target_id","aria-labelledby","controller_id","data-parent","parent_id","chart","AccordionProps","title","CardHeader","observerCallback","observer_options","header_ref","button_id","xmlns","fill","viewBox","d","CardBody","Card","last_card","Accordion","SecondPage","ProjectProps","header_text","technologies","description_text","left_to_right","small_screen_images","source","img_src","buttons","description_links","img_class","ProjectHeader","small","replace","DecoratedText","last_skill","skill","Button","Subheading","ProjectDescriptionSection","text_piece","button_props","image","alt","ProjectSection","ThirdPage","inner_class","ContactText","Link","icon","gmailIcon","IconMenu","FourthPage","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3fceedd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\r\nThis module will serve as Utilities that are used throughout the project.\r\n*/\r\nimport React, { Component } from 'react';\r\n\r\n\r\n/*\r\nDocs on following 2 components:\r\nBased on the object literal passed in, pass in a link tag or a span tag. This is used in\r\nthe TextSecton component to allow for paragraph tages with span or link tags within them.\r\nThe reason this component exists is because throughout the site, you will see that you'll\r\nhave a paragraph with text bits inside the paragraph that are either a link to somewhere\r\nelse, or they are styled differently. This makes it a component that is a common utility\r\nto be copied and used elsewhere. \r\n\r\nBasically you will have an array of strings as text, and an array of object literals that\r\nstore the properties used in the InlineTag component. You go through and add one string\r\nfrom the text array, then add one inline tag component according to the object literal.\r\nOnce all the object literals have passed, then you just render a line of string, and then\r\nnull.\r\n*/\r\nconst InlineTag = props => \r\n                props.link ? \r\n                <a href={props.link} target={props.target || null} className = {` ${(props.class_name) ? props.class_name : ''}`}>\r\n                    {\r\n                        props.text\r\n                    }\r\n                </a> :\r\n                <span className = {` ${(props.class_name) ? props.class_name : ''}`}>\r\n                    {\r\n                        props.text\r\n                    }\r\n                </span>\r\n\r\n\r\nconst TextSection = props => {\r\n    return(\r\n        <p className={`${(props.paragraph_classname) ? props.paragraph_classname : '' }`}>\r\n            {\r\n                props.text_lines.map((line, index) => {\r\n                    return(\r\n                        <React.Fragment key={`Line_${index + 1}`}>\r\n                            {line}\r\n                            {\r\n                                (index < (props.text_lines.length - 1)) ?\r\n                                (props.links[index].last) ? \r\n                                <React.Fragment>\r\n                                    <br />\r\n                                    <InlineTag {...props.links[index]}/>\r\n                                </React.Fragment> :\r\n                                <InlineTag {...props.links[index]}/> :\r\n                                null\r\n                            }\r\n                        </React.Fragment>\r\n                    )\r\n                })\r\n            }\r\n        </p>\r\n    );\r\n}\r\n\r\n\r\n/*\r\nUsed as the heading for the instructions for the chart component \r\n(\"Click on a section for more info ...\")\r\n*/\r\nconst H4Tag = props => <h4 className={props.class_name}>{props.text}</h4>\r\n\r\n\r\n/*\r\nThis tag is used for the icons that show up on the main page. The icons also\r\nshow up on the contact section (the fourth page), which shows up on mobile\r\ndevices (width <= 576px). Since both sets of icons have a common html format\r\n- an <a> tag nested inside an <i> tag - that wraps what's inside, I decided\r\nto make it a component in the Utilities file.  \r\n*/\r\nconst IconTag = props => \r\n    <i \r\n        className={props['italic_tag'].class_name || undefined} \r\n        id={props['italic_tag'].id || undefined}>\r\n        <a\r\n            target = {props['link_tag'].target || props.target || undefined}\r\n            rel={props['link_tag'].rel || props.rel || undefined}\r\n            id = {props['link_tag'].id || undefined}\r\n            className = {props['link_tag'].class_name || undefined}\r\n            href = {props['link_tag'].link || undefined}>\r\n                {props.children}\r\n        </a>\r\n    </i>\r\n\r\n\r\n/**\r\n * This is the header that shows up at the start of every section (About Me, Projects, Contact).\r\n * There are common classes that are used in it, and this header is used repeatedly, so I decided\r\n * to put it here in the Utilities file.\r\n */\r\nconst SectionHeader = props => \r\n    <h1 className={`text-center w-100 p-0 page-headers header-font font-weight-bold ${props.class_name}`}>\r\n       {props.children} \r\n    </h1>\r\n\r\n\r\nexport { TextSection, H4Tag, IconTag, SectionHeader };\r\n","import './Navbar.css';\r\nimport \"./FrontPage.css\";\r\nimport './Text Formatting and Styling.css';\r\nimport React, { useState } from 'react';\r\nimport { IconTag } from './CommonUtilities.js';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\n\r\n/* \r\nThe classes responsible for the icons that show.\r\nFont Awesome and Material Icons are used for this, and they\r\njust make use of classes. These are all the links to various\r\nclasses.\r\n*/\r\nconst IconProps = [\r\n    {\r\n        italic_tag: {\r\n            class_name: 'color-light mx-lg-5 smaller',\r\n        },\r\n        link_tag: {\r\n            link: 'Sailesh Sikdar Winter 2022 Resume.pdf',\r\n            id: 'Resume',\r\n        },\r\n        classname_inner: 'fas fa-file-pdf fa-sm color-light resume'\r\n    },\r\n    {\r\n        italic_tag: {\r\n            class_name: 'color-light link-icon mx-lg-5',\r\n        },\r\n        link_tag: {\r\n            link: 'https://ca.linkedin.com/in/sailesh-sikdar-96277a17a',\r\n            id: 'Linkedin',\r\n        },\r\n        classname_inner: 'fab fa-linkedin fa-sm color-light'\r\n    },\r\n    {\r\n        italic_tag: {\r\n            class_name: 'color-light link-icon mx-lg-5 github',\r\n        },\r\n        link_tag: {\r\n            link: 'https://github.com/s4sikdar',\r\n            id: 'Github',\r\n        },\r\n        classname_inner: 'fab fa-github fa-sm color-light'\r\n    },\r\n    {\r\n        italic_tag: {\r\n            class_name: 'color-light link-icon mx-lg-5 pb-0 mb-0',\r\n            id: 'outer-italic-tag'\r\n        },\r\n        link_tag: {\r\n            link: 'mailto:saileshsikdar1@gmail.com',\r\n            id: 'Gmail',\r\n        },\r\n        classname_inner: 'iconify color-light'\r\n    }\r\n];\r\n\r\n\r\n/* \r\nThe Icon component responsible for the icon you see on the front page, and the tooltip that shows when hovering\r\nover the icon.\r\n*/\r\nconst Icon = props => {\r\n    const [tooltipOpen, setTooltipOpen] = useState(false);\r\n    const toggle = () => setTooltipOpen(!tooltipOpen);\r\n    return (\r\n        <React.Fragment>\r\n            <IconTag {...props} rel=\"noreferrer\" target=\"_blank\">\r\n                {\r\n                    (props['link_tag'].id === 'Gmail') ? \r\n                    <span className={props.classname_inner} data-icon=\"mdi-gmail\" data-inline=\"false\"></span> :\r\n                    <i className = {props.classname_inner}></i>\r\n                }\r\n            </IconTag>\r\n            {/* \r\n            Tooltip from reactstrap, placed at the bottom of the icon when hovered. I don't know React well enough to\r\n            know about hooks, or much about Reactstrap. This I just got from here: https://reactstrap.github.io/components/tooltips/\r\n            I just changed the placement and the target.\r\n            */}\r\n            <Tooltip \r\n            placement = 'bottom'\r\n            target = {(props['link_tag'].id === 'Gmail') ? 'outer-italic-tag' : props['link_tag'].id } \r\n            isOpen={tooltipOpen} toggle = {toggle}\r\n            >\r\n                {`My ${props['link_tag'].id}`}\r\n            </Tooltip>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\n/*\r\nThis is the div that is responsible for the front page of the site.\r\nSince I make use of the bootstrap grid sytems, there are a couple of nested divs:\r\nthe container-fluid div, then the row div, then the column div.\r\n*/\r\nconst MainPage = props => {\r\n    return (\r\n        <div className = \"main-page w-100 h-100 dark-hover container-fluid d-flex p-0\">\r\n            <div className = \"row w-100 align-items-center m-0\">\r\n                <div className = \"col-12 w-100 align-self-center px-0\">\r\n                    <h1 className = {\"align-self-center text-center \" + \r\n                                    \"w-100 pb-lg-0 mb-lg-0 pb-1 translate-down \" + \r\n                                    \"position-relative main-header light-after color-light header-font\"}>\r\n                        {props.name}\r\n                    </h1>\r\n                    <div className = {\"row justify-content-lg-center \" + \r\n                                    \"justify-content-between align-items-center \" +\r\n                                    \"pt-0 mt-3 mt-md-2 pt-2 icon-container mx-auto d-none d-sm-flex\"}>\r\n                        {\r\n                            IconProps.map((icon_prop, index) => {\r\n                                return <Icon {...icon_prop} key = {`${icon_prop.id}_${index}`}/>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport { MainPage };\r\n","import React, { Component } from 'react';\r\nimport './Navbar.css';\r\nimport \"./FrontPage.css\";\r\nimport './Text Formatting and Styling.css';\r\nrequire('intersection-observer');\r\n\r\nclass ListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            href: `#${this.props.link}`,\r\n            height: null\r\n        }\r\n        this.scroll = this.scroll.bind(this);\r\n        this.current_ref = React.createRef();\r\n    }\r\n\r\n    scroll(event) {\r\n        event.preventDefault();\r\n        if (this.state.href.length > 1) {\r\n            try {\r\n                window.scrollTo({\r\n                    top: (document.querySelector(this.state.href).offsetTop - this.current_ref.current.parentNode.offsetHeight),\r\n                    behavior: 'smooth'\r\n                });\r\n            } catch(err) {\r\n                console.log(err);\r\n                window.scrollTo(0, (document.querySelector(this.state.href).offsetTop - this.current_ref.current.parentNode.offsetHeight));\r\n            }\r\n        }\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     this.current_ref.current.addEventListener(\"click\", this.scroll);\r\n    // }\r\n// document.documentMode ? null : \r\n    render() {\r\n        return(\r\n            <li className = \"nav-item\">\r\n                <a className = {this.props.class} href = {this.state.href} \r\n                    ref = {this.current_ref} onClick = {(Boolean(document.documentMode)) ? null :  this.scroll}>\r\n                    {this.props.value}\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            at_roof: (window.pageYOffset < 2),\r\n            options: {\r\n                rootMargin: `${(-1) * window.innerHeight + 2}px 0px 0px 0px`\r\n            }\r\n        };\r\n        // this.ul_ref = React.createRef();\r\n        this.child_ref = React.createRef();\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n        // window.addEventListener('scroll', this.scrollHandler);\r\n        this.new_observer = new IntersectionObserver(this.scrollHandler, this.state.options);\r\n        // new_observer.observe(document.querySelector('#container_fluid'));\r\n    }\r\n\r\n    scrollHandler(entries) {\r\n        entries.map(entry => (entry.isIntersecting) ? this.setState({at_roof: true}) : this.setState({at_roof: false}));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.new_observer.observe(document.body);\r\n        (window.pageYOffset < 2) ? this.setState({at_roof: true}) : this.setState({at_roof: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {/* && !(Boolean(document.documentMode)) */}\r\n                <nav className = \"navbar navbar-expand d-none d-lg-flex\">\r\n                    <ul role = 'navigation'\r\n                    className = {`navbar-nav fixed-top \r\n                                ${(this.state.at_roof) ? 'transparent pr-3' : 'light shadow-sm'}\\\r\n                                justify-content-end d-none d-lg-flex upper-nav`}>\r\n                        {this.props.values.map((value, index) => {\r\n                            return (\r\n                                (index === 0) ?\r\n                                <ListItem key = {`${value}_${index}`} \r\n                                class = {\r\n                                `${(this.state.at_roof) ? // light dark-after\r\n                                 'transparent-item mr-1 light-after' : 'nav-list-item light dark-after'}\\\r\n                                p-2 position-relative text-decoration-none nav-link`} value = {value} link = 'root' /> :\r\n                                <ListItem key = {`${value}_${index}`} \r\n                                class = {\r\n                                `${(this.state.at_roof) ? \r\n                                   `transparent-item ${(index === (this.props.values.length - 1)) ? 'mr-4' : 'mr-1'} light-after` :\r\n                                   'nav-list-item light mr-1 dark-after'}\r\n                                p-2 position-relative text-decoration-none nav-link`} value = {value}  \r\n                                link = {`page_${(index + 1)}`} ref = {this.child_ref}/>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport { ListItem, Navbar };\r\n\r\n","import './Navbar.css';\r\nimport \"./FrontPage.css\";\r\nimport './Text Formatting and Styling.css';\r\nimport React, { Component } from 'react'\r\n// import { Nav } from 'reactstrap';\r\n// mobile-list-item\r\nconst Links = [\r\n    {\r\n        name : 'Home',\r\n        class_inner: 'nav-link text-dark pb-1 mb-1 mx-2 position-relative ' +\r\n                     'dark-after mobile-list-item',\r\n        href: '#root'\r\n    }, \r\n    {\r\n        name: 'About',\r\n        class_inner: 'nav-link text-dark pt-0 pb-1 mt-0 mb-1 mx-2 ' + \r\n                     'position-relative dark-after mobile-list-item',\r\n        href: '#page_2'\r\n    },\r\n    {\r\n        name: 'Projects',\r\n        class_inner: 'nav-link text-dark pt-0 pb-1 mt-0 mb-1 mx-2 ' + \r\n                     'position-relative dark-after mobile-list-item',\r\n        href: '#page_3'\r\n    },\r\n    {\r\n        name: 'Contact',\r\n        class_inner: 'nav-link text-dark pt-0 pb-1 mt-0 mb-1 mx-2 ' + \r\n                     'position-relative dark-after mobile-list-item ' + \r\n                     'd-block d-sm-none',\r\n        href: '#page_4'\r\n    }\r\n];\r\n\r\n\r\nclass NavItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // This is attacted to the li tag, so we can access the li element\r\n        this.link_ref = React.createRef();\r\n        // Bind the event handlers so that they work\r\n        this.click_handler = this.click_handler.bind(this);\r\n        this.state = {\r\n            href: this.props.href \r\n        };\r\n    }\r\n\r\n    click_handler(event) {\r\n        event.preventDefault();\r\n        // Access the nav tag\r\n        const nav = this.link_ref.current.parentNode.parentNode.previousSibling;\r\n        // Scroll to the section, but offset it so that when the menu slides back up, you've\r\n        // scrolled to the section minus the height of the navbar. If we're in I.E., then just\r\n        // use scroll without object literal of options (it's supported in I.E.)\r\n        try {\r\n            window.scrollTo({\r\n                top: (document.querySelector(this.state.href).offsetTop - nav.offsetHeight),\r\n                behavior: 'smooth'\r\n            });\r\n        } catch(err) {\r\n            console.log(err);\r\n            window.scrollTo(0, (document.querySelector(this.state.href).offsetTop - nav.offsetHeight));\r\n        }\r\n        // console.log(this.link_ref.current.parentNode);\r\n    }\r\n    // ${(this.props.name === 'Home') ? 'pt-1': ''}\r\n    render() {\r\n        return (\r\n            <li className={`nav-item `} ref = {this.link_ref}>\r\n                <a className = {this.props.class_inner}\r\n                    href= {this.props.href} onClick = {Boolean(document.documentMode) ? null : this.click_handler}>\r\n                    {this.props.name}\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst NavButton  = props => {\r\n    return (\r\n        <button className=\"navbar-toggler custom-toggler dark mr-3\" type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target= {`#${props.id}`} aria-controls={`${props.id}`}\r\n                aria-expanded=\"false\" aria-label=\"Toggle navigation\"\r\n                id = \"button\">\r\n            <i className=\"fas fa-bars\"></i>\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nclass MobileNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = 'w-100 p-0 m-0'>\r\n                {/* \r\n                Normally the second div element below would be inside the nav element. Except that\r\n                I was going for the navbar to look to be above the dropdown menu, and have a shadow\r\n                effect to show it. This shadow effect wasn't being seen when the div was inside the\r\n                nav tag. So instead I had the nav tag have a higher z-index while the div tag had a\r\n                lower z-index, and then applied the shadow class. That worked.\r\n                */}\r\n                <nav className={\"navbar position-fixed w-100\" +\r\n                                \" shadow-sm navbar-expand-lg light\" +\r\n                                \" d-flex d-lg-none justify-content-end upper-nav px-0\"}>\r\n                    <NavButton id = 'navbarNavAltMarkup' />\r\n                </nav>\r\n\r\n                <div className=\"collapse position-fixed w-100 shadow-sm\r\n                                navbar-collapse navbar-expand-lg justify-content-start \r\n                                light collapsing upper-nav-menu d-lg-none offset-top\"\r\n                    id=\"navbarNavAltMarkup\">\r\n                    <ul className=\"navbar-nav\">\r\n                        {\r\n                            Links.map((link_props, index)=> {\r\n                                return <NavItem {...link_props} key = {`${link_props.name}_${index}`}/>\r\n                            })\r\n                        }\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { MobileNavbar };\r\n","import { MainPage } from \"./MainSection.js\";\r\nimport { Navbar } from './Navbar.js';\r\n// import $ from 'jquery';\r\nimport React, { Component } from 'react'\r\nimport { MobileNavbar } from \"./MobileNavbar.js\";\r\n// import { SecondPage } from \"./SecondPage.js\";\r\n\r\nconst text_content = ['Home', 'About', 'Projects'];\r\n\r\nclass Website extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.componentRef = React.createRef();\r\n        this.elementRef = React.createRef();\r\n        this.state = {\r\n            rootMargin: `${(-1) * window.innerHeight + 2}px 0px 0px 0px`\r\n        }\r\n        this.toggleClass = this.toggleClass.bind(this);\r\n        // this.new_observer = new IntersectionObserver(this.toggleClass, this.state);\r\n    }\r\n\r\n    toggleClass(entries) {\r\n        this.componentRef.current.scrollHandler(entries);\r\n    }\r\n\r\n    // componentDidMount() {\r\n        // this.new_observer.observe(document.querySelector('#root'));\r\n        // $('[data-toggle=\"tooltip\"]').tooltip();\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"p-0 m-0 w-100 h-100\">\r\n                <div className = \"w-100 h-100 background-charcoal\" id = \"container_fluid\" ref = {this.elementRef}>\r\n                    <div className = \"container-fluid p-0\">\r\n                        <Navbar values = {text_content} ref = {this.componentRef}/>\r\n                        <MobileNavbar/>\r\n                    </div>\r\n                    {/* <FourthComponent values = {text_content}/> */}\r\n                    <MainPage name = {this.props.name}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { Website };","import Chart from 'chart.js';\r\nimport React, { Component } from 'react'\r\nimport './Second Page.css';\r\nimport { TextSection, H4Tag } from './CommonUtilities.js';\r\n\r\n\r\n/*\r\nThe classes responsible for the disclaimer text that you see under the chart.\r\n*/\r\nconst disclaimer_text = {\r\n    paragraph_classname: 'text-center my-1 pb-0 d-none d-md-block',\r\n    links: [\r\n        {\r\n            text: '*',\r\n            class_name: 'font-weight-bold'\r\n        },\r\n        {\r\n            text: 'Disclaimer: ',\r\n            class_name: 'font-weight-bold'\r\n        },\r\n        {\r\n            text: '*',\r\n            class_name: 'font-weight-bold'\r\n        }\r\n    ],\r\n    text_lines: [\r\n        '',\r\n        '',\r\n        'skills are rated relative to each other.',\r\n        ''\r\n    ]\r\n}\r\n\r\n\r\n/*\r\nThe configuration options required for the Chart created by ChartJS. Since the Google Charts API\r\nis known not to work on laptops that use HiDPI screens, you need to have a chart that works there.\r\nSo I use ChartJS as a default, and on I.E. 11 I use the GoogleCharts API.\r\n*/\r\nconst ConfigurationOptions = {\r\n    type: 'pie',\r\n    data: {\r\n        labels: ['Python', 'HTML, CSS, JavaScript', 'REACTjs', 'SQL/SQLite3', 'Git/GitHub', 'Bootstrap', 'Django', 'C'],\r\n        datasets: [{\r\n            data: [10, 8, 3, 2, 2, 3, 3, 6],\r\n            backgroundColor: ['#ffe4c4', '#e9d4b7', '#dfc197', '#d8b27e', '#d0a465', '#c69146', '#AD7C59', '#6F4E37']\r\n        }]\r\n    },\r\n    options: {\r\n        responsive: true,\r\n        aspectRatio: 2,\r\n        maintainAspectRatio: false,\r\n        tooltips: {\r\n            position: 'nearest',\r\n            displayColors: false,\r\n            callbacks: {\r\n                label: (tooltipItem, data) => {\r\n                    let skill_label = data.labels[tooltipItem.index];\r\n                    switch (skill_label)  {\r\n                        case 'Python':\r\n                            return [\r\n                                'Python - my \\\"mother tongue\\\" of programming',\r\n                                'languages. It was the first practical language', \r\n                                'I learned to code in, the one I made my first', \r\n                                'project in, and the one I\\'d answer technical',\r\n                                'interviews with. It\\'s the main language I use',\r\n                                'at work.'\r\n                            ]\r\n                        case 'HTML, CSS, JavaScript': \r\n                            return [\r\n                                'At the advice of a friend, I started learning the',\r\n                                'basics of web development around last April',\r\n                                '2020. I\\'d say I\\'ve gotten to be passable in it,',\r\n                                'and have gone on to learn REACTjs over the',\r\n                                'past winter.'\r\n                            ]\r\n                        case 'REACTjs':\r\n                            return [\r\n                                'I\\'ve been learning the basics of REACTjs over',\r\n                                'the last couple of months, starting around the',\r\n                                'end of December/start of January. I\\'m familiar',\r\n                                'with the basics of components, and understand',\r\n                                'a little about state and the component lifecycle',\r\n                                'as well (not much though). I recreated this site',\r\n                                'in REACTjs as an exercise.'\r\n                            ]\r\n                        case 'SQL/SQLite3':\r\n                            return [\r\n                                'I started learning SQL as part of a school course',\r\n                                'I took in relational databases - google \"CS 338',\r\n                                'UWaterloo\". I learned the basics of SQL queries',\r\n                                'using the SQLite3 DBMS. I then covered some ',\r\n                                'basics on normal forms, relational models, and',\r\n                                'the E.R. model - but this was back in the summer',\r\n                                'of 2020. I\\'ve since used it for one of my ',\r\n                                'side-projects. I\\'ve also been using MySQL a little',\r\n                                'at work through the command line, only doing',\r\n                                'basic Create, Read, Update and Delete',\r\n                                'statements to check that my server-side code',\r\n                                'works correctly.'\r\n                            ]\r\n                        case 'Git/GitHub':\r\n                            return [\r\n                                'I learned Git at the advice of a friend, starting',\r\n                                'out by tracking my projects with it to save',\r\n                                'myself from having 10 copies of the same',\r\n                                'code in different directories. I mainly use Git',\r\n                                'and GitHub for version control at work.'\r\n                            ]\r\n                        case 'Bootstrap':\r\n                            return [\r\n                                'A friend gave me the advice of learning and using ',\r\n                                'Bootstrap last fall, and its classes and accordion ',\r\n                                'components have made this project (and web ',\r\n                                'development) a lot easier.'\r\n                            ]\r\n                        case 'Django':\r\n                            return [\r\n                                'One of the applications that I\\'ve been working on ',\r\n                                'at my internship is a Django applicaton, I\\'ve done ',\r\n                                'a little of various things in Django - from templating,',\r\n                                'to model querying, to view handling functions.'\r\n                            ]\r\n                        case 'C':\r\n                            return [\r\n                                'I took CS 136 - Elementary Algorithm Design and ',\r\n                                'Data Abstraction in C - at school this past fall term. ',\r\n                                'I got a decent mark in it (77).'\r\n                            ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// Used as properties for the h4 tag\r\nconst Instructions = {\r\n    class_name: 'text-center pt-0 pb-1 my-0 chart-heading',\r\n    text: 'Hover over/touch a section for more info, touch off it for less'\r\n}\r\n\r\n\r\n/*\r\nSine we can only render the pie chart after it has been rendered, I\r\nchose to use a class component for this.\r\n*/\r\nclass SkillsChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chart_width_and_height: 575\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // What we need to do to actually render the Chart.\r\n        const PieChart = document.querySelector('#myChart');\r\n        this.SkillsPieChart = new Chart(PieChart.getContext('2d'), ConfigurationOptions);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='d-none d-md-block'>\r\n                <H4Tag {...Instructions}/>\r\n                <TextSection {...disclaimer_text} />\r\n                {/* \r\n                The ChartJS library requires you use a div with a canvas element. This is why I\r\n                use the Google Charts API in I.E. 11 (I.E. doesn't like canvas).\r\n                */}\r\n                <div ref = {this.props.ref_prop} id='chart_div' className='position-relative'>\r\n                    <canvas \r\n                        id='myChart' \r\n                        width={`${this.state.chart_width_and_height}`} \r\n                        height={`${this.state.chart_width_and_height}`}>\r\n                    </canvas>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport { SkillsChart, disclaimer_text };\r\n","import React, { Component } from 'react';\r\nimport './Second Page.css';\r\nimport { TextSection, H4Tag } from './CommonUtilities.js';\r\nimport {disclaimer_text} from './SkillsChart.js';\r\n\r\n\r\n// The configuration options for the h4 tag that tells you how to use the chart\r\nconst Instructions = {\r\n    class_name: 'text-center pt-3 my-0 chart-heading',\r\n    text: 'Click a section for more info, click it again for less.'\r\n}\r\n\r\n\r\n/* Responsible for the chart that uses the Google Charts API */\r\nclass GoogleChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.load_google_charts_api = this.load_google_charts_api.bind(this);\r\n    }\r\n\r\n    /*\r\n    Load the js file responsible for setting up/loading the GoogleCharts API and then drawing\r\n    the chart. The Google Charts API requires that you have an empty div with an id specified\r\n    so that the API can target it. So we render the div with id=\"chart_div\" first, and once\r\n    that is loaded, you can load the JS file that loads and uses the API to draw the chart. \r\n    */\r\n    load_google_charts_api() {\r\n        let script_tag = document.createElement('script');\r\n        script_tag.type = \"text/javascript\";\r\n        script_tag.id = 'google_chart_logic_file';\r\n        script_tag.src = \"./ChartRenderingLogic.js\";\r\n        document.body.appendChild(script_tag);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.load_google_charts_api();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = 'w-100 h-100 m-0 p-0 d-none d-md-block'>\r\n                <H4Tag {...Instructions} />\r\n                <TextSection {...disclaimer_text} />\r\n                <div id = \"chart_div\" className = 'w-100 m-0 p-0 GoogleCharts'>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport { GoogleChart };\r\n","import React, { Component } from 'react';\r\nimport './Second Page.css';\r\n\r\n\r\n/*\r\nThe properties that are used in the MobileSkillsMenu component.\r\nOn small devices and below ( < 768px) all skills are given a rating\r\nout of 5 stars. Light-gray means an empty star, dark-gray means the star\r\nis already full. The header property is the skill name, the stars \r\nproperty represents how many stars it should get.\r\n\r\nThe heading and stars components combine to give you the MobileSkillsMenu\r\ncomponent. at the bottom.\r\n*/\r\nconst MobileSkillsProps = [\r\n    {\r\n        header: 'Python',\r\n        stars: 3\r\n    },\r\n    {\r\n        header: 'HTML, CSS',\r\n        stars: 2.5\r\n    },\r\n    {\r\n        header: 'JavaScript',\r\n        stars: 2.5\r\n    },\r\n    {\r\n        header: 'Bootstrap',\r\n        stars: 2\r\n    },\r\n    {\r\n        header: 'REACTjs',\r\n        stars: 1.5\r\n    },\r\n    {\r\n        header: 'Django',\r\n        stars: 1.5\r\n    },\r\n    {\r\n        header: 'SQL/SQLite3',\r\n        stars: 1.5\r\n    },\r\n    {\r\n        header: 'Git/GitHub',\r\n        stars: 1.5\r\n    },\r\n    {\r\n        header: 'Object Oriented Design',\r\n        stars: 2\r\n    },\r\n    {\r\n        header: 'Willingness to learn',\r\n        stars: 5\r\n    }\r\n];\r\n\r\n\r\n/*\r\nThe heading for a certain skill.\r\n*/\r\nconst Heading = props => {\r\n    return (\r\n        <h5 className={`col-7 text-left m-0 px-0 skill-heading font-weight-normal`}>\r\n            {props.header}\r\n        </h5>\r\n    );\r\n}\r\n\r\n\r\n/**\r\n * The stars each skill have. To determine the color for the star, do the following:\r\n * 1) Subtract the stars property from the index value\r\n * 2) If the difference is greater than or equal to 0, do nothing. It will be filled dark gray.\r\n * 3) If the difference === -0.5, then you have a half star. If you're in internet explorer,\r\n * this is an empty star (I.E. doesn't support linear gradients). Otherwie, use the half-star\r\n * class.\r\n */\r\nconst Stars = props => {\r\n    return (\r\n        <div className={`col-5 px-0 text-right`}>\r\n            {\r\n                [1, 2, 3, 4, 5].map((val, index) => {\r\n                    let difference = props.stars - (index + 1);\r\n                    console.log(difference);\r\n                    return (\r\n                        <span \r\n                            className={`${(difference >= 0) ? '' : (difference === -0.5) ?\r\n                                          Boolean(document.documentMode) ? 'gray' : 'half-star' : 'gray'} star`} \r\n                            key={`star_${(index + 1)}`}>&#9733;</span>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n} \r\n\r\n\r\nconst MobileSkillsMenu = props => {\r\n    return(\r\n        <div className=\"w-100 align-items-center d-md-none mx-0 h-100\">\r\n            {\r\n                MobileSkillsProps.map((prop, index) => {\r\n                    return(\r\n                        <div className=\"row m-0 p-0 d-flex align-items-center\" key={`skill_${index + 1}`}>\r\n                            <Heading {...prop} />\r\n                            <Stars {...prop} />\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { MobileSkillsMenu, MobileSkillsProps };\r\n","import React, { Component } from 'react';\r\nimport { SkillsChart } from './SkillsChart.js';\r\nimport { GoogleChart } from './GoogleChart.js';\r\nimport { MobileSkillsMenu, MobileSkillsProps } from './MobileSkillsMenu.js';\r\n\r\n\r\n/*\r\nWe have to take into account I.E. 11, and it's dislike of the canvas element.\r\nThus in I.E. 11, I cannot use ChartJS and instead use the Google Charts API,\r\nwhile in other browsers I use ChartJS, as it is supported in laptops with\r\nHi DPI screen. Thus this ChartComponent handles detection of I.E. 11, and renders\r\nthe according component for the chart.\r\n*/\r\nconst ChartComponent = props => {\r\n    const internet_explorer = Boolean(document.documentMode);\r\n    const chart_ref = React.createRef();\r\n    return (\r\n        <div className={`${(internet_explorer) ? 'pt-2' : 'pt-0'} px-0 m-0`}>\r\n            {\r\n                !(internet_explorer) ?\r\n                <SkillsChart ref_prop={chart_ref} /> :\r\n                <GoogleChart />\r\n            }\r\n            <MobileSkillsMenu />\r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport { ChartComponent };\r\n","/**\r\n * Used for any logic used for the \"The Saga So Far\" section.\r\n */\r\nimport React, { Component } from 'react';\r\nimport './Text Formatting and Styling.css';\r\nimport './Second Page.css';\r\nimport {TextSection} from './CommonUtilities.js'; \r\nrequire('intersection-observer');\r\n\r\n\r\n/**\r\n * Used for the properties used for each text section. Properties are as follows\r\n * month - used in the id attribute for each div that wraps the contents in the\r\n * Section component\r\n * 1) header - the header text of an individual text section\r\n * 2) text_lines - used in tandem with the links property in the TextSection component.\r\n * See CommonUtilities.js for information on the InlineTag and TextSection components,\r\n * for further information.\r\n * 3) links - see the text_lines property above for where it is used. The properties for\r\n * the inline tags based on the object literal are as follows:\r\n *  a) text - the text that is rendered in the tag\r\n *  b) class - the class that is used in the the <span> or <a> tags\r\n *  c) last - if true, then insert a br tag and then the InlineTag component and the text\r\n *  after it.\r\n */\r\nconst SectionProps = [\r\n    {\r\n        month: 'January',\r\n        header: 'January 2020',\r\n        text_lines: [\r\n            'At the advice of a friend of mine, Hamza Rashid, I decided ' +\r\n            'to try being a software developer. Using Python, a language I was ' +\r\n            'familiar with from school coursework, I created my ' +\r\n            'first side project - single and multiplayer Tic Tac Toe.',\r\n            ' I decided I want to try becoming a Software Developer and created my first side-project.'\r\n        ],\r\n        links: [\r\n            { \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        // funny_text_classes: ['font-weight-bold'],\r\n        paragraph_classname: 'opaque'\r\n    },\r\n    {\r\n        month: 'March',\r\n        header: 'March 2020',\r\n        text_lines: [\r\n            'I made a couple more Python projects, but in hindsight they were \\\r\n            very beginner-level/unprofessional projects. I had python code on 3 measly .txt\\\r\n            files, and realized what a long way I had to go when I checked the job postings on\\\r\n            Indeed/Glassdoor. I applied anyway and inevitably got back about 100 rejections.', \r\n            ' - I decided I want to try becoming a Software Developer and created my first side-project.'\r\n        ],\r\n        links: [\r\n            {\r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        paragraph_classname: 'opaque'\r\n    },\r\n    {\r\n        month: 'May',\r\n        header: 'May 2020',\r\n        text_lines: [\r\n            'After talking to a couple of friends for advice, one of them named Saad Taj gives me an avenue for exploration. \\\r\n            He recommends learning Web Development basics (HTML, CSS, JavaScript). I worked on it through the month of April \\\r\n            and came out with my first first-ever portfolio website at this time. I also revamped my Tic-Tac-Toe project to be \\\r\n            Object-Oriented in design. It wouldn\\'t cut it just yet.',\r\n            ' - I picked up web-development basics at the advice of a friend.'\r\n        ],\r\n        links: [\r\n            { \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        paragraph_classname: 'opaque'\r\n    },\r\n    {\r\n        month: 'July',\r\n        header: 'July 2020',\r\n        text_lines: [\r\n            'I\\'d been talking with another friend of mine in UWaterloo C.S. who I\\'d known for a year or two. I showed him \\\r\n            some of my projects, asking him for feedback. He bluntly told me that my projects need a lot more work, and that \\\r\n            at the current rate I\\'m looking at about 100 more rejections. He gives me some pointers as to where to start \\\r\n            and I get to work on improving them.',\r\n            ' - a friend pointed out that my projects need a lot of work.'\r\n        ],\r\n        links: [\r\n            { \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        paragraph_classname: 'opaque'\r\n    },\r\n    {\r\n        month: 'August',\r\n        header: 'August 2020',\r\n        text_lines: [\r\n            'Over the spring term, I took a course in relational databases (CS 338), where I learned how to write SQL statements using \\\r\n            the SQLite3 Database Management System. I use this to revamp my original Tic-Tac-Toe game, storing user-profiles \\\r\n            via SQLite3. I also created a Database using SQL statements for a final project in that class that I later \\\r\n            put on Github as a side project - titled ',\r\n            '.',\r\n            ' - I learned SQL using SQLite3, created a side project in it, and used it to add to an old project of mine.'\r\n        ],\r\n        links: [\r\n            {\r\n                text: 'CS 338 Final Project',\r\n                class_name: 'spaced-link header-font font-weight-normal'\r\n            },\r\n            { \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        paragraph_classname: 'opaque'\r\n    },\r\n    {\r\n        month: 'September',\r\n        header: 'September 2020',\r\n        text_lines: [\r\n            'Over the summer term, I\\'d been diving further into JavaScript, and wanted to be comfortable enough in it before \\\r\n            transitioning to REACTjs. To get my hands dirty with it, I created a replica of the Google Chrome dinosaur game. \\\r\n            To find the original game, go to Chrome and type ',\r\n            ' as the address, and press the space bar once the dinosaur pops up. After working in GIMP to add color to the \\\r\n            image sprites and writing about 1300 lines of JavaScript, I created a colored variant of the original game, \\\r\n            though more simple.',\r\n            ' - I created a colored variant of the Chrome Dino Game, to \"get my hands dirty\" with JavaScript.'\r\n        ],\r\n        links: [\r\n            {\r\n                text: 'chrome://dino',\r\n                class_name: 'spaced-link header-font font-weight-normal'\r\n            },\r\n            { \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        paragraph_classname: 'opaque'\r\n    },\r\n    {\r\n        month: 'October',\r\n        header: 'October 2020',\r\n        text_lines: [\r\n            'My old website from back in May was still up, and I focused on revamping it. I showed the revamped \\\r\n            template to the friend mentioned in the July section. He gives me some areas to work on, and I get to \\\r\n            it. In the meantime I put that template up, as it was a surefire upgrade to my old website that I first \\\r\n            created. During this time, I also managed to land my first-ever interview for an Automation-Testing \\\r\n            internship. It was an eye-opening experience.',\r\n            ' - I focused on revamping my website, and landed my first ever interview.'\r\n        ],\r\n        links: [\r\n            { \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        paragraph_classname: 'opaque'\r\n    },\r\n    {\r\n        month: 'December',\r\n        header: 'December 2020',\r\n        text_lines: [\r\n            'Just as I was unsure whether a career in the tech industry would pan out, a software manager from Cisco \\\r\n            called and asked to interview me for a position on Cisco\\'s Git Migration team. \\\r\n            I managed to pass the interview and landed my first ever internship. Huge thanks to everyone who helped \\\r\n            me along the way. Meanwhile, over the last couple of months I\\'ve been learning Bootstrap to make my \\\r\n            website responsive, as well as revamp parts of it.',\r\n            ' - I landed my first ever internship in Software Development, and started learning Bootstrap.'\r\n        ],\r\n        links: [\r\n            { \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        paragraph_classname: 'opaque'\r\n    },\r\n    {\r\n        month: 'January',\r\n        header: 'January 2021',\r\n        text_lines: [\r\n            'After about 2 to 3 months of work, I finally finished my revamped website, found ', \r\n            '. It\\'s my best \\\r\n            work yet. Over the holidays I covered a little ES6, and I started learning some basics in REACTjs. In anticipation \\\r\n            for my internship, I set aside some of this time to start learning some bare basics of Flask. I ended up not \\\r\n            needing it, but came to find out it would carry over for learning Django.',\r\n            ' - I finished my Portfolio Website, and started learning REACTjs and Flask over the break.'\r\n        ],\r\n        links: [\r\n            {\r\n                text: 'here',\r\n                link: 'https://s4sikdar.github.io/new_old_website/index.html',\r\n                target: '_blank',\r\n                class_name: 'link font-weight-bold light'\r\n            },\r\n            { \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        paragraph_classname: 'opaque'\r\n    },\r\n    {\r\n        month: 'March',\r\n        header: 'March 2021',\r\n        text_lines: [\r\n            \"I decided to try rebuilding my portfolio website but using REACTjs. Though not as impressive as creating a new website \\\r\n            from scratch, I mainly consider this to be an exercise in learning REACT. Down the road, you could possibly see a \\\r\n            revamp. At work I was lucky enough to land an extension into a spring term. I've learned a lot about how things are done \\\r\n            in the industry vs. just a side-project of mine.\",\r\n            \" - I started recreating my website in REACTjs, and got an extension on my internship.\"\r\n        ],\r\n        links: [\r\n            { \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        paragraph_classname: 'opaque'\r\n    },\r\n    {\r\n        month: 'August',\r\n        header: 'August 2021',\r\n        text_lines: [\r\n            \"I successfully completed an 8-month internship at Cisco Systems. It was an eye-opening experience, and I learned a \\\r\n            ton. I'm not just talking about the technical side of things when I say that. I'm also talking about how the software \\\r\n            development process works in the industry.\",\r\n            \" - I finished an 8-month software development internship at Cisco.\"\r\n        ],\r\n        links: [\r\n            { \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        paragraph_classname: 'opaque'\r\n    }\r\n];\r\n\r\n\r\n/**\r\n * Header used for each text section that slides in. It is opaque by default, as we want it\r\n * to slide in.\r\n */\r\nconst MonthHeader = props => <h5 className='opaque'>{props.header}</h5>\r\n\r\n\r\n/**\r\n * Each text section has the header and the text involved. Based on if it's on the\r\n * left side or the right side, different classes are added. This is what is observed\r\n * by the intersection observer and slid in when half the text here shows up on\r\n * screen.\r\n */\r\nconst Section = props => {\r\n    return(\r\n        <div \r\n            className = {`inner_divs px-0\r\n            ${(props.left_side) ? \r\n                'col-6 left_side d-none d-xl-block pr-2' : \r\n                (props.odd) ? 'right_side d-block d-xl-none' : 'right_side'}`} \r\n            id = {`${props.month}_${(props.left) ? 1 : 2}`}>\r\n            <MonthHeader header={props.header} />\r\n            <TextSection {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * We add sections on both sides if we are on an odd section. An odd section would be every other section.\r\n * So if January 2020 is the first one, March 2020 is odd. This will slide in text from the left side on larger\r\n * devices. By default we show text on the right side.\r\n */\r\nconst Row = props => {\r\n    return(\r\n        <div className='row w-100 mx-0' >\r\n            {\r\n                (props.odd) ?\r\n                <Section {...props} left_side={true} /> :\r\n                <div className=\"col-6 left d-none d-xl-block\" />\r\n            }\r\n            <div className=\"col-12 col-xl-6 right position-relative\">\r\n                <Section {...props} left_side={false}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n/**\r\n * Return all the rows with text sections inside.\r\n */\r\nconst Saga = props => {\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                SectionProps.map((section, index) => <Row {...section} odd = {(index % 2) === 1} key={`Row_${index + 1}`}/>)\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * This component holds all logic responsible for sliding in text based on whether the window\r\n * has scrolled that place into view (the place where it's supposed to slide in). One approach\r\n * would be to have a scroll handler function that checks this and slides the text in, however,\r\n * this would flood the event queue with scroll handler functions. This would lead to some lag\r\n * when other events are fired, and overall poor performance. The intersection observer is an\r\n * alternative that is supposed to be better for performance. When a window scrolls an element\r\n * being observed into view by a certain threshold, fire a callback function only then. This is\r\n * used in my case to slide text in when the window scrolls the div into view by 50% (50% of\r\n * the div is showing).\r\n */\r\nclass SagaComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inside_intersection = this.inside_intersection.bind(this);\r\n        this.saga_observer_callback = this.saga_observer_callback.bind(this);\r\n        this.div_ref = React.createRef();\r\n        // We listen to the aria-expanded button for the corresponding header for this section.\r\n        // Only based on this changing, we set the text to be opaque, and accordingly observe\r\n        // or unobserve it.\r\n        this.saga_observer_options = {\r\n            attributes: true,\r\n            attributeFilter: ['aria-expanded'],\r\n            attributeOldValue: true\r\n        };\r\n        // When half of the text shows on screen, slide the text in.\r\n        this.intersection_observer_options = {\r\n            threshold: 0.5\r\n        };\r\n        // This is used to observe each section of text that slides in.\r\n        this.timeline_observer = new IntersectionObserver(this.inside_intersection,\r\n                                                          this.intersection_observer_options);\r\n        // Used to observe the \"aria-expanded\" attribute on the button of the heading\r\n        // of this section.\r\n        this.saga_observer = new MutationObserver(this.saga_observer_callback);\r\n    }\r\n\r\n    /**\r\n     * The callback for when the intersection observer fires. Basically, for each text \r\n     * section, check if it's intersecting by enough and if the class is opaque. Then it\r\n     * means we found a new text section that hasn't been shown yet. Slide it in, and \r\n     * unobserve this section of text.\r\n     */\r\n    inside_intersection(entries, observer) {\r\n        entries.forEach(entry => {\r\n            let target = entry.target;\r\n            let target_class = target.className;\r\n            let header_class = target.children[0].className;\r\n\r\n            if (entry.isIntersecting) {\r\n                if ((entry.intersectionRatio >= 0.5) && (header_class === 'opaque')) {\r\n                    let right_side = target_class.includes('right_side');\r\n                    target.children[0].className = `${right_side ? 'slide_left' : 'slide_right'} font-weight-bold saga-header`;\r\n                    target.children[1].className = `${right_side ? 'slide_left' : 'slide_right'} saga-paragraphs`;\r\n                    // If the entry is intersecting, then add the according classes and unobserve the entry\r\n                    observer.unobserve(target);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The entries refer to the aria-expanded property for the button corresponding to\r\n     * this section in the accordion that opens and closes this section. If the old property\r\n     * of aria-expanded was true, then that means it's now false, and vice versa. So if\r\n     * the section is now closing/closed, set all the text to be opaque, and unobserve\r\n     * each section of text. Otherwise, you still set the text all to be opaque, but you\r\n     * observe the element.\r\n     */\r\n    saga_observer_callback(entries, observer) {\r\n        let animate_divs = this.div_ref.current.querySelectorAll(\".inner_divs\");\r\n        if (entries[0].oldValue === 'true') {\r\n            animate_divs.forEach(element => {\r\n                element.children[0].setAttribute('class', 'opaque');\r\n                element.children[1].setAttribute('class', 'opaque');\r\n                this.timeline_observer.unobserve(element);\r\n            });\r\n        } else {\r\n            animate_divs.forEach(element => {\r\n                element.children[0].setAttribute('class', 'opaque');\r\n                element.children[1].setAttribute('class', 'opaque');\r\n                this.timeline_observer.observe(element);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let button = this.div_ref.current.previousElementSibling.querySelector('button');\r\n        this.saga_observer.observe(button, this.saga_observer_options);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div\r\n                ref = {this.div_ref}\r\n                className={`light collapse ${this.props.expanded ? 'show' : ''}\r\n                ${this.props.saga ? 'px-xs-0 px-sm-1 px-xl-0': ''}`}\r\n                id = {this.props.target_id} aria-labelledby={this.props.controller_id}\r\n                data-parent={`#${this.props.parent_id}`}\r\n                >\r\n                <div className={`card-body light ${(this.props.chart) ? 'container-fluid pt-0' : ''} \r\n                ${this.props.saga ? 'pb-0' : ''}`}\r\n                id={this.props.saga ? 'saga-container' : null}>\r\n                    <Saga />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport { SagaComponent, SectionProps };\r\n","import React, { Component } from 'react';\r\nimport './Navbar.css';\r\nimport './Text Formatting and Styling.css';\r\nimport './Second Page.css';\r\nimport { ChartComponent } from './ChartComponent.js';\r\nimport { TextSection, SectionHeader } from './CommonUtilities.js';\r\nimport { SagaComponent, SectionProps, FunnyText } from './SagaComponent.js';\r\n\r\n\r\n/*\r\nEach accordion section uses a CardHeader Component and a CardBody Component. An accordion is made\r\nup of multiple cards, each with a card header and a body (where the text lies). See here for example:\r\nhttps://getbootstrap.com/docs/4.3/components/collapse/#accordion-example\r\nIt's intuitive to break up the header and the body into their own components - the \"CardHeader\"\r\nand \"CardBody\" components respectively. These combine to create a \"Card\" component, and there are\r\nmultiple \"Card\" components in the Accordion, which make up the Accordion component. This is used\r\nin the \"SecondPage\" component for the second page. This may be subject to refactoring in the future.\r\n\r\nThe props are set as follows below. \r\n1) title - heading of the section\r\n2) text_lines - the lines of the text used in the \"TextSection\" component. The text lines are exchanged\r\nwith an item from the array represented by the \"links\" property.\r\n3) links - these represent inline tags used in the paragraph tag. Each object literal makes up the\r\nproperties for one inline tag. The properties are as follows:\r\n    a) text - the text to fill the tag\r\n    b) class - the class used in the class attribute\r\n    c) last - if true, then add a br tag before the next set of span and text tags\r\n    d) link - if specified, render a link tag and this is where it goes\r\n4) expanded - if true, then this section will be expanded.\r\n5) chart - if true, then this is where you render the chart component\r\n6) saga - if true, then this is where you render the saga component\r\n*/\r\nconst AccordionProps = [\r\n    {\r\n        title: 'About Me',\r\n        text_lines: [\r\n            'Hi, I\\'m Sailesh Sikdar, and I\\'m a 4th-year University of Waterloo student studying Mathematics. My major is in \\\r\n            Mathematics/Business Administration and I\\'m doing a minor in Computing (The University of Waterloo\\'s equivalent \\\r\n            to a minor in Computer Science). I\\'ve grown to have an interest in Software Development and have completed an 8-month \\\r\n            Software Development internship at Cisco Systems. I\\'m hoping to make it a full-time job one day. I\\'ve learned a little \\\r\n            bit of various aspects of development: front-end, back-end and databases. I could grow to work in front-end development, \\\r\n            back-end development, or maybe even Automation Testing. The question is ',\r\n            ' one?',\r\n            ' I\\'m a 4th year student at the University of Waterloo, who did a software development internship and is hoping to \\\r\n            make it a full-time job.'\r\n        ],\r\n        paragraph_classname: 'mb-0',\r\n        links: [\r\n            {\r\n                text: 'which',\r\n                class_name: 'font-italic'\r\n            },\r\n            {   \r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        expanded: false\r\n    },\r\n    {\r\n        title: 'Interests',\r\n        text_lines: [\r\n            'In my spare time, I\\'ve had varous interests here and there. For starters, am someone who has an \\\r\n            interest in Finance and Investments, it being one of my favoured topics in school. I play/follow \\\r\n            basketball as well, and ',\r\n            ' happen to be a Washington Wizards fan. Some of the TV Shows I\\'ve seen are \\\r\n            The Office, Modern Family and Suits.',\r\n            ' I have an interest in Finance and Investments, I play and follow basketball on my spare time, and I \\\r\n            watch too much Netflix.'\r\n        ],\r\n        paragraph_classname: 'mb-0',\r\n        links: [\r\n            {\r\n                text: 'sadly',\r\n                class_name: 'text-decoration-line-through'\r\n            },\r\n            {\r\n                last: true,\r\n                text: 'TL;DR',\r\n                class_name: 'spaced-link header-font font-weight-bold'\r\n            }\r\n        ],\r\n        expanded: false\r\n    },\r\n    {\r\n        title: 'Relative Skills',\r\n        expanded: true,\r\n        chart: true\r\n    },\r\n    {\r\n        title: 'The Saga So Far',\r\n        expanded: false,\r\n        saga: true\r\n    }\r\n];\r\n\r\n\r\n/*\r\nWhy is the \"CardHeader\" component a class component?\r\n\r\nWhen I was designing this site in plain HTML, CSS and JavaScript (https://s4sikdar.github.io/new_old_website/index.html)\r\nthere was an issue with the accordion. I designed it a little differently so as to have a heading on the left and\r\na button on the right. There would be a couple of elements on the UI that would change when the accordion opens\r\nand closes (the button and the border property on the bottom of the card header). The problem here is that you\r\ncan't use click event listeners for this alone. This is because if someone double clicks, then changes that should\r\nbe done once when a section opens or closes can be done twice. So if you have a plus sign to open the accordion\r\nsection when it's closed, and a minus sign for when the section is open and you want to close it, then double-clicking\r\nthe button could leave you with a plus sign when the accordion section is open and you want to close it, and a minus\r\nsign for when the accordion section is closed and you want to open it.\r\n\r\nWhat should happen normally:\r\n ---------------------------\r\n| Heading                 + |\r\n ---------------------------\r\n\r\n ---------------------------\r\n| Heading                 - |\r\n ---------------------------\r\n| blah blah ............... |\r\n ---------------------------\r\n\r\nWhat happens if you double click:\r\n ---------------------------\r\n| Heading                 - |\r\n ---------------------------\r\n\r\n ---------------------------\r\n| Heading                 + |\r\n ---------------------------\r\n| blah blah ............... |\r\n ---------------------------\r\n\r\nSo to solve this problem what you want to do is find some attribute that only changes when the accordion\r\nsection opens or closes, and \"listen\" to the change of this attribute. Accordingly adjust the state, and thus\r\nadjust the UI elements that should change. This attribute in my case is the \"aria-expanded\" attribute. I use\r\nthe mutation observer API to listen to the change of this attribute, and accordingly change the state. Details\r\non the mutation observer api are found here: https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\n*/\r\nclass CardHeader extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: this.props.expanded,\r\n        };\r\n        this.observerCallback = this.observerCallback.bind(this);\r\n        this.observer_options = {\r\n            attributes: true,\r\n            attributeFilter: ['aria-expanded'],\r\n            attributeOldValue: true\r\n        };\r\n        this.observer = new MutationObserver(this.observerCallback);\r\n        this.header_ref = React.createRef();\r\n    }\r\n\r\n    observerCallback(entries, observer) {\r\n        this.setState((state, props) => ({expanded: !state.expanded}));\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            this.observer.observe(this.header_ref.current.querySelector('button'), this.observer_options);\r\n        } catch (err) {\r\n            console.log(this.header_ref.current);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n                ref={this.header_ref}\r\n                className={`card-header light align-items-center px-sm-3 pb-sm-2 border-bottom-${(this.state.expanded) ? 'on' : '0'}`}\r\n                id={this.props.controller_id}>\r\n                <h2 className=\"d-flex align-items-center justify-content-between mb-0 ml-1 mr-2 card-headings\">\r\n                    {this.props.title}\r\n                    <button\r\n                        type=\"button\" id={this.props.button_id}\r\n                        className={`btn light p-0 float-right button d-flex align-self-center\\ \r\n                        rotate-${(this.state.expanded) ? 'up' : 'down'}`}\r\n                        data-toggle=\"collapse\"\r\n                        data-target={'#' + this.props.target_id} \r\n                        aria-expanded={this.props.expanded ? 'true' : 'false'}\r\n                        aria-controls={this.props.target_id}\r\n                        >\r\n                        <svg \r\n                            xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" \r\n                            fill=\"currentColor\" className=\"bi bi-caret-down-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\r\n                        </svg>\r\n                    </button>\r\n                </h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/*\r\nThe CardBody referred to in the above comment. This component doesn't require state, thus is\r\nfunctional.\r\n*/\r\nconst CardBody = props => {\r\n    return (\r\n        <div \r\n            className={`light collapse ${props.expanded ? 'show' : ''}\r\n                        ${props.saga ? 'px-xs-0 px-sm-1 px-xl-0': ''}`}\r\n            id = {props.target_id} aria-labelledby={props.controller_id}\r\n            data-parent={`#${props.parent_id}`}>\r\n            <div className={`card-body light ${(props.chart) ? 'container-fluid pt-0' : ''} \r\n                            ${props.saga ? 'pb-0' : ''} about-paragraph`}\r\n                id={props.saga ? 'saga-container' : null}>\r\n                {\r\n                    (props.chart) ? \r\n                    <ChartComponent /> :\r\n                    <TextSection {...props} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/*\r\nThis represents one section on the accordion.\r\n*/\r\nconst Card = props => {\r\n    return(\r\n        <div className={`card w-100 dark-after dark-before ${(props.last_card) ? 'last-card' : ''} border-0`}>\r\n            <CardHeader {...props}/>\r\n            {\r\n                (props.saga) ? \r\n                <SagaComponent {...props}/> :\r\n                <CardBody {...props}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/*\r\nRefer to the comments above for context on this component and the next one.\r\n*/\r\nconst Accordion = props => {\r\n    return (\r\n            <div className='d-block col-11 col-sm-10 col-lg-9 mx-auto pb-2 pb-lg-1' id = 'Accordion'>\r\n                {\r\n                    AccordionProps.map((prop, index) => {\r\n                        return (\r\n                            <Card {...prop}\r\n                                key = {`card_${(index + 1)}`}\r\n                                controller_id = {`heading_${(index + 1)}`}\r\n                                target_id={`collapse_${(index + 1)}`}\r\n                                last_card = {((index + 1) == AccordionProps.length)}\r\n                                button_id={`button_${index + 1}`}\r\n                                parent_id='Accordion'/>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nconst SecondPage = props => {\r\n    return(\r\n        <div className=\"w-100 d-block light m-0 pt-1 pb-lg-5 pb-4\" id = \"second_page\">\r\n            <SectionHeader class_name='mt-2 mb-sm-2 mb-md-3 mb-xl-4'>\r\n                Background\r\n            </SectionHeader>\r\n            <div className=\"container-fluid w-100 px-0\">\r\n                <div className=\"row p-0 m-0\">\r\n                    <Accordion {...AccordionProps} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport { SecondPage, AccordionProps, ChartComponent };\r\n","import React, { Component } from 'react';\r\nimport { SectionHeader } from './CommonUtilities.js';\r\nimport './Text Formatting and Styling.css';\r\nimport './Third Page.css';\r\nimport './Database\\ Icon.png';\r\nimport './Table database.svg';\r\nimport './New\\ Dino\\ Sprite.png';\r\nimport './Database\\ Icon.png';\r\nimport './New\\ Website\\ Dino\\ Sprite\\ Small.png';\r\n\r\n\r\n/**\r\n * Documentation on ProjectProps:\r\n * \r\n * This is used in the project section of the third page. Each section that talks about one \r\n * project is represented in one of these object literals. Inside are various properties used\r\n * for different purposes described below:\r\n * 1) header_text - the header text of the project \r\n * 2) technologies - Skills/Technologies listed that were used for the project\r\n * 3) left_to_right - If true then the project description is on the left, the image is on the right.\r\n * Otherwise if false, then the opposite direction.\r\n * small_screen_images: so the way the rendering of the used images works is that for smaller\r\n * devices, all images are loaded in image tags and different images are displayed at different\r\n * breakpoints. Properties for each tag are as follows:\r\n *  a) source: The url for the image\r\n *  b) header_text: Based on this, the margin classes are different\r\n *  c) class: If other classes are needed for any special cases, then\r\n *  use the class attribute\r\n * 4) img_src - the main link for the image on the right side of the page\r\n * 5) buttons - properties used for the button elements. These are used for links to\r\n * the application, or the source code. There are properties for each button:\r\n *  a) text: the text inside the button\r\n *  b) link: where the link goes to\r\n * 6) last_card - if true, then some extra classes are added to give you the bottom line tag\r\n * (each section uses a class for the top line tag, and the last one has a class for the botttom\r\n * line tag as well)\r\n * \r\n * Possible Questions:\r\n * \r\n * Why did I have all images rendered and shown at different breakpoints insteadof combing media-queries\r\n * with the \"content: url()\" property in a stylesheet?\r\n * \r\n * That's what I originally did when making my old website, and it's what I did here originally. The\r\n * problem is that when I tested it in Firefox and I.E. 11, it doesn't work when using Create React\r\n * App. Oddly enough, when I made the site in plain HTML, CSS and JavaScript, I didn't run into this\r\n * in Firefox. Thus it works this way now.\r\n */\r\nconst ProjectProps = [\r\n    {\r\n        header_text: 'Tic Tac Toe',\r\n        technologies: ['Python', 'SQL', 'SQLite3'],\r\n        description_text: [\r\n            'Single and Multiplayer Tic Tac Toe, created using Python, SQL/SQLite3, and ' + \r\n            'implemented with the Minimax algorithm. Make sure you have Python3 installed.'\r\n        ],\r\n        left_to_right: true,\r\n        small_screen_images: [\r\n            {\r\n                source: './Tic Tac Toe.png',\r\n                header_text: 'Tic Tac Toe'\r\n            }\r\n        ],\r\n        img_src: './Tic Tac Toe.png',\r\n        buttons: [\r\n            {\r\n                text: 'Code',\r\n                link: 'https://github.com/s4sikdar/Tic-Tac-Toe-OOP-version'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        header_text: 'Chrome Dino Run',\r\n        technologies: ['HTML5', 'CSS3', 'JavaScript', 'GIMP'],\r\n        description_text: [\r\n            'A colored replica of the Chrome dinosaur game found by typing ',\r\n            ' on Google. This game was made using Canvas, Object Oriented Design, and multi-threaded programming. ' + \r\n            'Supported in all else but I.E., phones and tablets.'\r\n        ],\r\n        description_links: ['chrome://dino'],\r\n        left_to_right: false,\r\n        small_screen_images: [\r\n            {\r\n                source: './New Dino Sprite.png',\r\n                header_text: 'Chrome Dino Run'\r\n            },\r\n            {\r\n                source: './New Website Dino Sprite Small.png',\r\n                header_text: 'Chrome Dino Run'\r\n            }\r\n        ],\r\n        img_src: './New Website Dino Sprite Large.png',\r\n        buttons: [\r\n            {\r\n                text: 'Application',\r\n                link: 'https://s4sikdar.github.io/new_old_website/chrome_dino_run/Dino_game.html'\r\n            },\r\n            {\r\n                text: 'Code',\r\n                link: 'https://github.com/s4sikdar/s4sikdar.github.io/tree/master/new_old_website/chrome_dino_run'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        header_text: 'NBA Records Database',\r\n        technologies: ['SQL', 'SQLite3'],\r\n        description_text: [\r\n            'My final project for CS 338, a relational database storing records of NBA teams over the last 10 years. ' +\r\n            'You\\'ll find information on championships, team records, coaches and General Managers.'\r\n        ],\r\n        left_to_right: true,\r\n        img_src: './Large Size Database Img.png',\r\n        small_screen_images: [\r\n\r\n            {\r\n                source: Boolean(document.documentMode) ? './Database Icon.png' : './Table database.svg',\r\n                header_text: 'NBA Records Database',\r\n                img_class: Boolean(document.documentMode) ? 'd-none d-md-block d-lg-none mw-50' : false\r\n            },\r\n            {\r\n                source: './Database Icon.png',\r\n                header_text: 'NBA Records Database'\r\n            }\r\n        ],\r\n        buttons: [\r\n            {\r\n                text: 'Code',\r\n                link: 'https://github.com/s4sikdar/CS-338-Final-Project'\r\n            }\r\n        ],\r\n        last_card: true\r\n    }\r\n];\r\n\r\n\r\n/**\r\n * The project header. This is used for the h1 tag that is used on smaller devices and regular laptops.\r\n * So based on the small property, the bootstrap classes are rendered accordingly. Thank god for\r\n * Bootstrap.\r\n */\r\nconst ProjectHeader = props => {\r\n    return(\r\n        <h1 className={`pb-xl-3 pb-lg-2 project-headers \r\n                        d-${props.small ? `block` : `none`} d-lg-${props.small ? `none` : `block`}`}\r\n            id={`${props.header_text.replace(/\\s+/g, '-')}-sm-header`}>\r\n            {props.header_text}\r\n        </h1>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * Used for nicely styled text that you may see in the description section (the description\r\n * text, and the skills listed)\r\n */\r\nconst DecoratedText = props => \r\n                    <span className={`link header-font light ${props.last_skill ? '' : 'mr-2'} \r\n                                      my-1 my-sm-0 font-weight-normal d-inline-flex d-sm-inline`}>\r\n                        {props.skill}\r\n                    </span>\r\n\r\n\r\n/**\r\n * Extra classes we use to get bootstrap-like buttons, but with a slightly different look\r\n */\r\nconst Button = props => {\r\n    return(\r\n            <a href = {props.link} className='project-button py-sm-1 px-sm-2 mr-2 text-decoration-none' \r\n               target='_blank' rel=\"noreferrer\">\r\n                {props.text}\r\n            </a>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * Used for the bold \"Description\" label\r\n */\r\nconst Subheading = props => <span className='font-weight-bold project-paragraph'>{props.text}</span>\r\n\r\n\r\nconst ProjectDescriptionSection = props => {\r\n    return(\r\n        <React.Fragment>\r\n            <div className='mb-0 p-0'>\r\n                <ProjectHeader header_text={props.header_text}/>\r\n                <p className='project-paragraph'>\r\n                    <Subheading text='Decription: ' />\r\n                    {/* \r\n                    Add a string of text from the description property (it's an array),\r\n                    and then add the DecoratedText component with the text inside it.\r\n                    If we've gone through the array of object literals representing\r\n                    description links to add, then just add null. This would mean\r\n                    something like if I had 2 decorated text components, and 3 sections\r\n                    of text (3 strings in the description_text array), then we would reach\r\n                    a point where we've gone through the span tags, and we just add the\r\n                    last line of text and then null.\r\n                    */}\r\n                    {\r\n                        props.description_text.map((text_piece, index) => {\r\n                            return (\r\n                                    (props.description_links) ?\r\n                                    <React.Fragment key = {`Text_part_${(index + 1)}`}>\r\n                                        {text_piece}\r\n                                        {\r\n                                            (index <= (props.description_links.length - 1)) ?\r\n                                            <DecoratedText skill={props.description_links[index]} key = {`Link_${(index + 1)}`}\r\n                                                    last_skill={index === (props.description_links.length - 1)}/> :\r\n                                            null\r\n                                        }\r\n                                    </React.Fragment> :\r\n                                    text_piece\r\n                            )\r\n                        })\r\n                    }\r\n                </p>\r\n                {/* \r\n                List skills after describing the project, and then put any applicable links last below that in the\r\n                last div below.\r\n                */}\r\n                <p className='project-paragraph'>\r\n                    <Subheading text='Technologies used: '/>  \r\n                    {\r\n                        props.technologies.map((skill, index) => <DecoratedText skill={skill} key={`Skill_${index + 1}`} \r\n                                                                        last_skill={index === (props.technologies.length - 1)}/>)\r\n                    }\r\n                </p>\r\n            </div>\r\n            <div className='m-0 p-0 d-flex flex-row'>\r\n                {\r\n                    props.buttons.map((button_props, index) => <Button {... button_props} key={`Button_${index + 1}`}/>)\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * Used for each section where you see a project described, separated by horizontal lines. Look over\r\n * the specific methods for more info.\r\n */\r\nclass Section extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n        }\r\n\r\n        this.image = this.image.bind(this);\r\n    }\r\n\r\n    /**\r\n     * The images that are all loaded and shown at different screen sizes.\r\n     * Take each image source, and replace any of '.', '\\', '/', ' '\r\n     * with a dash. When you see it first, replace it with an empty \r\n     * string, then follow the above rule. This will be the class that \r\n     * is used, unless the image class is specified in the props parameter\r\n     * passed. \r\n     * So for example if we have'./Dino Sprite Image.png', it becomes\r\n     * 'Dino-Sprite-Image-png', and this is the class property. The class\r\n     * for this would be specified in the stylesheet, so it can be rendered\r\n     * only on certain browser widths.\r\n     */\r\n    image(props, index) {\r\n        let class_name = props.source.replace('./', '');\r\n        class_name = class_name.replace(/[.\\/\\s*]/g, '-');\r\n        return (\r\n            <img src={props.source}\r\n            className={`mw-90 mx-auto ${(props.img_class) ? props.img_class : class_name} \r\n                        ${(props.header_text === 'NBA Records Database') ? 'my-2 my-md-3' : \r\n                          (props.header_text === 'Tic Tac Toe') ? 'my-2' : 'my-0 '}\r\n                        my-lg-0`} key={index} alt='Image not available'/>\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * How we render each section. First we have the project header that we show for\r\n     * mobile devices. Then we rendeer all the images that are shown on various small\r\n     * devices. Then we render the description on the left and the image on the right,\r\n     * or the image on the left and the description on the right, based on the \r\n     * left_to_right property. Contain everything in a div with the appropriate classes, \r\n     * contain the mobile header and images in a div, and the main section for laptops in\r\n     * a div as well, all with their respective classes.\r\n     */\r\n    render() {\r\n        return(\r\n            <div className={`project ${this.props.last_card ? 'last-project' : ''} \r\n                            light-before light-after row mx-auto py-3 \r\n                            py-${(this.props.header_text === 'Tic Tac Toe') ? 'lg' : 'md'}-4 position-relative`}>\r\n                <div className={`text-center d-block d-lg-none w-100 px-3 px-sm-4`}>\r\n                    <ProjectHeader header_text={this.props.header_text} small={true}/>\r\n                    {\r\n                        this.props.small_screen_images.map((prop, index) => {\r\n                            return this.image(prop, `${prop.source.replace('./', '').replace(/(.|\\\\|\\/)\\s*/g, '-')}_${index + 1}`);\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className={`col-12 col-lg-6 d-flex py-1 px-3 px-sm-4\r\n                                 ${(this.props.left_to_right) ? \r\n                                    `flex-column justify-content-between  \r\n                                    ${(this.props.header_text === 'Tic Tac Toe') ? 'pr-md-2' : ''}` :\r\n                                    'justify-content-end pl-lg-1 pr-lg-4'}`}>\r\n                    {\r\n                        (this.props.left_to_right) ?\r\n                        <ProjectDescriptionSection {...this.props}/> :\r\n                        <img src={this.props.img_src} \r\n                             className={`${(this.props.header_text === 'Tic Tac Toe') ? '' : 'pl-4 '}\r\n                                        w-100 d-none d-lg-block h-auto align-self-center`} \r\n                             alt='Image not available' id = {this.props.header_text.replace(/\\s+/g, '-')}/>\r\n                    }\r\n                </div> \r\n                <div className={`col-12 col-lg-6 d-flex py-1 px-3 px-sm-4 pl-lg-3 pl-xl-4 \r\n                                ${(this.props.left_to_right) ? \r\n                                  `justify-content-end ` :\r\n                                  'flex-column justify-content-between' }`}>\r\n                    {\r\n                        (this.props.left_to_right) ?\r\n                        <img src={this.props.img_src}\r\n                            className={`w-100 d-none d-lg-block h-auto align-self-center`}\r\n                             alt='Image not available' id = {this.props.header_text.replace(/\\s+/g, '-')}/> :\r\n                        <ProjectDescriptionSection {...this.props}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Encompass all the projects in a div that is centered, an uses the column grid to change\r\n * widths based on browser width. We must nest it in a row div.\r\n */\r\nclass ProjectSection extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='row pb-4'>\r\n                <div className='col-11 col-sm-10 col-lg-9 mx-auto'>\r\n                    {\r\n                        ProjectProps.map((prop, index) => <Section {...prop} key={`Project_${index + 1}`}/>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * We have to have a div that has the container-fluid class. It has the header and the main content.\r\n * We add some classes afterwards for color schemes and spacing, but that's about it.\r\n */\r\nclass ThirdPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='w-100 dark light-after light-before pt-1 pb-3 pb-md-4 pb-lg-5 mb-1 container-fluid' id='third_page'>\r\n                <SectionHeader class_name='mt-3 mb-sm-2 mb-md-3 mb-xl-4'>\r\n                    Projects\r\n                </SectionHeader>\r\n                <ProjectSection last_card={true} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { ThirdPage };\r\n","export default __webpack_public_path__ + \"static/media/Database Icon.f7ac63aa.png\";","export default __webpack_public_path__ + \"static/media/New Dino Sprite.87401d51.png\";","/**\r\n * This is code for the fourth page that is only on mobile.\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport gmailIcon from '@iconify-icons/mdi/gmail';\r\nimport './Text Formatting and Styling.css';\r\nimport './Third Page.css';\r\nimport { IconTag, SectionHeader } from './CommonUtilities.js';\r\n\r\n\r\n// Properties that go on the icon tags at the bottom\r\nconst Links = [\r\n    {\r\n        italic_tag: {\r\n            class_name: 'mr-5'\r\n        },\r\n        link_tag: {\r\n            id: 'mobile_linkedin',\r\n            link: 'https://ca.linkedin.com/in/sailesh-sikdar-96277a17a',\r\n            class_name: 'd-inline-block',\r\n        },\r\n        inner_class: 'fab fa-linkedin fa-sm icons'\r\n    },\r\n    {\r\n        italic_tag: {\r\n        },\r\n        link_tag: {\r\n            id: 'mobile_gmail',\r\n            link: 'mailto:saileshsikdar1@gmail.com',\r\n            class_name: 'd-inline-block',\r\n        },\r\n        inner_class: 'icons iconify icon:mdi-gmail icon-inline:false'\r\n    }\r\n]\r\n\r\n\r\n/**\r\n * Used for the text shown on the fourth page under the header.\r\n */\r\nconst ContactText = props => \r\n                    <p className='px-4 text-center my-0 w-100 card-body pb-0 pt-1 about-paragraph'>\r\n                        {props.children}\r\n                    </p>\r\n\r\n\r\n/**\r\n * Used for the icons.\r\n */\r\nconst Link = props => {\r\n    return(\r\n        <IconTag {...props} target='_blank'>\r\n            {\r\n                props['link_tag'].id.includes('linkedin') ?\r\n                <i className={props.inner_class}></i> :\r\n                <Icon icon={gmailIcon} />\r\n            }\r\n        </IconTag>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * We use this div as a flexbox container for the links (the link component above), so we \r\n * get vertically and horizontally centered icons. This puts them in the center, and you \r\n * can space them further apart using margin clases, which I did. The icons don't line up\r\n * perfectly still vertically, so I have to apply some custom styling using their ids\r\n * attributes.\r\n */\r\nconst IconMenu = props => {\r\n    return(\r\n        <div className='d-flex d-md-none justify-content-center align-items-center mx-auto mh-25'>\r\n            {\r\n                Links.map(prop => <Link {...prop} key={`${prop['link_tag'].id}_key`}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * What we render in the end to an html div using React's render method\r\n */\r\nclass FourthPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className = 'd-block d-sm-none p-0 light'>\r\n                <SectionHeader class_name='pb-0 pt-3 mb-0'>\r\n                    Contact\r\n                </SectionHeader>\r\n                <ContactText>\r\n                    Thanks for stopping by! Contact me via any of the following - my email is saileshsikdar1@gmail.com.\r\n                </ContactText>\r\n                <IconMenu />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport { FourthPage };\r\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Navbar.css';\nimport \"./FrontPage.css\";\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Website } from \"./Website.js\";\nimport { SecondPage,AccordionProps } from './SecondPage.js';\nimport { ThirdPage } from './ThirdPage.js';\nimport { FourthPage } from './FourthPage.js';\n\n\nconst {render} = ReactDOM;\n\nrender(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Website name = \"Sailesh Sikdar\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nrender(\n  <React.StrictMode>\n    <SecondPage />\n  </React.StrictMode>,\n  document.getElementById('page_2')\n);\n\nrender(\n  <React.StrictMode>\n    <ThirdPage />\n  </React.StrictMode>,\n  document.getElementById('page_3')\n);\n\nrender(\n  <React.StrictMode>\n    <FourthPage />\n  </React.StrictMode>,\n  document.getElementById('page_4')\n)\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}